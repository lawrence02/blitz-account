package com.blitz.account.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class JournalAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJournalAllPropertiesEquals(Journal expected, Journal actual) {
        assertJournalAutoGeneratedPropertiesEquals(expected, actual);
        assertJournalAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJournalAllUpdatablePropertiesEquals(Journal expected, Journal actual) {
        assertJournalUpdatableFieldsEquals(expected, actual);
        assertJournalUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJournalAutoGeneratedPropertiesEquals(Journal expected, Journal actual) {
        assertThat(actual)
            .as("Verify Journal auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJournalUpdatableFieldsEquals(Journal expected, Journal actual) {
        assertThat(actual)
            .as("Verify Journal relevant properties")
            .satisfies(a -> assertThat(a.getJournalDate()).as("check journalDate").isEqualTo(expected.getJournalDate()))
            .satisfies(a -> assertThat(a.getReference()).as("check reference").isEqualTo(expected.getReference()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJournalUpdatableRelationshipsEquals(Journal expected, Journal actual) {
        // empty method
    }
}
