package com.blitz.account.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CurrencyAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCurrencyAllPropertiesEquals(Currency expected, Currency actual) {
        assertCurrencyAutoGeneratedPropertiesEquals(expected, actual);
        assertCurrencyAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCurrencyAllUpdatablePropertiesEquals(Currency expected, Currency actual) {
        assertCurrencyUpdatableFieldsEquals(expected, actual);
        assertCurrencyUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCurrencyAutoGeneratedPropertiesEquals(Currency expected, Currency actual) {
        assertThat(actual)
            .as("Verify Currency auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCurrencyUpdatableFieldsEquals(Currency expected, Currency actual) {
        assertThat(actual)
            .as("Verify Currency relevant properties")
            .satisfies(a -> assertThat(a.getCode()).as("check code").isEqualTo(expected.getCode()))
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getSymbol()).as("check symbol").isEqualTo(expected.getSymbol()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCurrencyUpdatableRelationshipsEquals(Currency expected, Currency actual) {
        // empty method
    }
}
